#ifndef _COMX_CHAR_H
#define _COMX_CHAR_H

//comx_character_set header

#define ALPHA_COLOR1 0xC000 
#define ALPHA_COLOR2 0x4000 
#define NUMBER_COLOR1 0x4000 
#define NUMBER_COLOR2 0x8000 

// Color definition with textcolordefinition(3) & character_set (1 or 2)
// ALPHA / NUMBER
// textcolor		0		1			
// COLOR1				
// 0x1000			BLACK	RED		
// 0x4000			BLUE	MAGENTA			
// 0x8000			GREEN	YELLOW	
// 0xC000			CYAN	WHITE		

// Color definition with textcolordefinition(3) & character_set (3 or 4)
// ALPHA
// textcolor		0		1		2		3	
// COLOR1	COLOR2			
// 0x1000			BLACK			RED		
//			0x1000			RED				BLACK
// 0x4000			BLUE			MAGENTA			
//			0x4000			MAGENTA			BLUE	
// 0x8000			GREEN			YELLOW	
//			0x8000			YELLOW			GREEN
// 0xC000			CYAN			WHITE		
//			0xC000			WHITE			CYAN
//
// NUMBER			COLOR1	COLOR2	COLOR1	COLOR2
// textcolor		0		1		2		3	
// COLOR1	COLOR2			
// 0x1000			BLACK			RED		
//			0x1000			BLACK			RED
// 0x4000			BLUE			MAGENTA 
//			0x4000			BLUE			MAGENTA
// 0x8000			GREEN			YELLOW		
//			0x8000			GREEN			YELLOW
// 0xC000			CYAN			WHITE	
//			0xC000			CYAN			WHITE

/*
static const unsigned char shapes[] =
{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0x3E, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00,
	0x02, 0x3E, 0x22, 0x10, 0x08, 0x10, 0x22, 0x3E, 0x00, 0x00,
	0x03, 0x1E, 0x20, 0x20, 0x20, 0x20, 0x20, 0x1E, 0x00, 0x00,
	0x04, 0x3F, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x3F,
	0x05, 0x00, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x00,
	0x06, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
	0x09, 0x1C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, 0x00,
	0x0A, 0x0E, 0x04, 0x04, 0x04, 0x04, 0x24, 0x18, 0x00, 0x00,
	0x0B, 0x22, 0x24, 0x28, 0x30, 0x28, 0x24, 0x22, 0x00, 0x00,
	0x0C, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x0D, 0x22, 0x36, 0x2A, 0x2A, 0x22, 0x22, 0x22, 0x00, 0x00,
	0x0E, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x1C, 0x08, 0x00, 0x00,
	0x0F, 0x00, 0x08, 0x0C, 0x3E, 0x0C, 0x08, 0x00, 0x00, 0x00,
	0x10, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x11, 0x3F, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
	0x12, 0x3C, 0x22, 0x22, 0x3C, 0x28, 0x24, 0x22, 0x00, 0x00,
	0x13, 0x1C, 0x22, 0x20, 0x1C, 0x02, 0x22, 0x1C, 0x00, 0x00,
	0x14, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3F,
	0x15, 0x0C, 0x1E, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1E, 0x0C,
	0x16, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
	0x17, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x00,
	0x18, 0x0C, 0x0C, 0x0C, 0x3F, 0x3F, 0x3F, 0x0C, 0x0C, 0x0C,
	0x19, 0x00, 0x08, 0x18, 0x3E, 0x18, 0x08, 0x00, 0x00, 0x00,
	0x1A, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x3F,
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x21, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x00, 0x00,
	0x22, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x23, 0x14, 0x14, 0x3E, 0x14, 0x3E, 0x14, 0x14, 0x00, 0x00,
	0x24, 0x08, 0x1E, 0x28, 0x1C, 0x0A, 0x3C, 0x08, 0x00, 0x00,
	0x25, 0x32, 0x32, 0x04, 0x08, 0x10, 0x26, 0x26, 0x00, 0x00,
	0x26, 0x10, 0x28, 0x28, 0x10, 0x2A, 0x24, 0x1A, 0x00, 0x00,
	0x27, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x28, 0x02, 0x04, 0x08, 0x08, 0x08, 0x04, 0x02, 0x00, 0x00,
	0x29, 0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00,
	0x2A, 0x08, 0x2A, 0x1C, 0x08, 0x1C, 0x2A, 0x08, 0x00, 0x00,
	0x2B, 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00,
	0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x00,
	0x2D, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x2F, 0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, 0x00,

	0x3A, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x3B, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x08, 0x10, 0x00,
	0x3C, 0x04, 0x08, 0x10, 0x20, 0x10, 0x08, 0x04, 0x00, 0x00,
	0x3D, 0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00,
	0x3E, 0x20, 0x10, 0x08, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00,
	0x3F, 0x1C, 0x22, 0x04, 0x08, 0x08, 0x00, 0x08, 0x00, 0x00,
	0x40, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00,

	0x5B, 0x0E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0E, 0x00, 0x00,
	0x5C, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00,
	0x5D, 0x1C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1C, 0x00, 0x00,
	0x5E, 0x08, 0x1C, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00,
	0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00,
	0x60, 0x9C, 0xA2, 0xA6, 0xAA, 0xB2, 0xA2, 0x9C, 0x00, 0x00,
	0x61, 0x88, 0x98, 0x88, 0x88, 0x88, 0x88, 0x9C, 0x00, 0x00,
	0x62, 0x9C, 0xA2, 0xA2, 0x8C, 0x90, 0xA0, 0xBE, 0x00, 0x00,
	0x63, 0x9C, 0xA2, 0x82, 0x8C, 0x82, 0xA2, 0x9C, 0x00, 0x00,
	0x64, 0x84, 0x8C, 0x94, 0xA4, 0xBE, 0x84, 0x84, 0x00, 0x00,
	0x65, 0xBE, 0xB0, 0xBC, 0x82, 0x82, 0xA2, 0x9C, 0x00, 0x00,
	0x66, 0x8C, 0x90, 0xA0, 0xBC, 0xA2, 0xA2, 0x9C, 0x00, 0x00,
	0x67, 0xBE, 0x82, 0x84, 0x88, 0x90, 0x90, 0x90, 0x00, 0x00,
	0x68, 0x9C, 0xA2, 0xA2, 0x9C, 0xA2, 0xA2, 0x9C, 0x00, 0x00,
	0x69, 0x9C, 0xA2, 0xA2, 0x9E, 0x82, 0x84, 0x88, 0x00, 0x00,
	0x6A, 0x9C, 0xA2, 0xA6, 0xAA, 0xB2, 0xA2, 0x9C, 0x00, 0x00,
	0x6B, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF,
	0x6C, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
	0x6D, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
	0x6E, 0x08, 0x08, 0x1C, 0x1C, 0x1C, 0x36, 0x22, 0x22, 0x00,
	0x6F, 0x00, 0x00, 0x07, 0x0F, 0x18, 0x0F, 0x00, 0x00, 0x00,
	0x70, 0x00, 0x00, 0x00, 0x3F, 0x38, 0x3F, 0x00, 0x00, 0x00,
	0x71, 0x06, 0x0E, 0x1C, 0x3C, 0x08, 0x30, 0x00, 0x00, 0x00,
	0x72, 0x00, 0x0C, 0x0A, 0x09, 0x08, 0x18, 0x38, 0x30, 0x00,
	0x73, 0x00, 0x00, 0x0C, 0x1E, 0x3F, 0x0C, 0x12, 0x21, 0x00,
	0x74, 0x3F, 0x00, 0x0E, 0x10, 0x10, 0x0E, 0x00, 0x3F, 0x00,
	0x75, 0x3F, 0x00, 0x1E, 0x12, 0x12, 0x1E, 0x00, 0x3F, 0x00,
	0x76, 0x3F, 0x00, 0x22, 0x36, 0x2A, 0x22, 0x00, 0x3F, 0x00,
	0x77, 0x3F, 0x00, 0x24, 0x18, 0x18, 0x24, 0x00, 0x3F, 0x00,
	0x78, 0x80, 0x80, 0x80, 0x80, 0x80, 0xBF, 0x80, 0x80, 0x00,
	0x79, 0x1E, 0x21, 0x20, 0x20, 0x20, 0x20, 0x21, 0x1E, 0x00,
	0x7A, 0x9E, 0xA1, 0xA1, 0xA1, 0xA1, 0xA1, 0xA1, 0x9E, 0x00,
	0x7B, 0x61, 0x73, 0x6D, 0x61, 0x61, 0x61, 0x61, 0x61, 0x00,
	0x7C, 0x21, 0x21, 0x12, 0x0C, 0x0C, 0x12, 0x21, 0x21, 0x00,
	0x7D, 0x80, 0x80, 0xBF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
	0x7E, 0x0C, 0x12, 0x2D, 0x29, 0x2D, 0x12, 0x0C, 0x00, 0x00,
	0x7F, 0x48, 0x5C, 0x7E, 0x7E, 0x5C, 0x48, 0x00, 0x00, 0x00,
};*/

#if !defined __COMX__ || !defined __PECOM__
static const unsigned char shape_alpha[] =
{
	0x08, 0x1C, 0x22, 0x22, 0x3E, 0x22, 0x22, 0x00, 0x00,
	0x3C, 0x12, 0x12, 0x1C, 0x12, 0x12, 0x3C, 0x00, 0x00,
	0x1C, 0x22, 0x20, 0x20, 0x20, 0x22, 0x1C, 0x00, 0x00,
	0x38, 0x24, 0x22, 0x22, 0x22, 0x24, 0x38, 0x00, 0x00,
	0x3E, 0x20, 0x20, 0x3C, 0x20, 0x20, 0x3E, 0x00, 0x00,
	0x3E, 0x20, 0x20, 0x3C, 0x20, 0x20, 0x20, 0x00, 0x00,
	0x1C, 0x20, 0x20, 0x2E, 0x22, 0x22, 0x1C, 0x00, 0x00,
	0x22, 0x22, 0x22, 0x3E, 0x22, 0x22, 0x22, 0x00, 0x00,
	0x1C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, 0x00,
	0x0E, 0x04, 0x04, 0x04, 0x04, 0x24, 0x18, 0x00, 0x00,
	0x22, 0x24, 0x28, 0x30, 0x28, 0x24, 0x22, 0x00, 0x00,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3E, 0x00, 0x00,
	0x22, 0x36, 0x2A, 0x2A, 0x22, 0x22, 0x22, 0x00, 0x00,
	0x22, 0x22, 0x32, 0x2A, 0x26, 0x22, 0x22, 0x00, 0x00,
	0x1C, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00, 0x00,
	0x3C, 0x22, 0x22, 0x3C, 0x20, 0x20, 0x20, 0x00, 0x00,
	0x1C, 0x22, 0x22, 0x22, 0x2A, 0x24, 0x1A, 0x00, 0x00,
	0x3C, 0x22, 0x22, 0x3C, 0x28, 0x24, 0x22, 0x00, 0x00,
	0x1C, 0x22, 0x20, 0x1C, 0x02, 0x22, 0x1C, 0x00, 0x00,
	0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00,
	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00, 0x00,
	0x22, 0x22, 0x22, 0x14, 0x14, 0x08, 0x08, 0x00, 0x00,
	0x22, 0x22, 0x22, 0x2A, 0x2A, 0x36, 0x22, 0x00, 0x00,
	0x22, 0x22, 0x14, 0x08, 0x14, 0x22, 0x22, 0x00, 0x00,
	0x22, 0x22, 0x14, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00,
	0x3E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x3E, 0x00, 0x00
};

static const unsigned char shape_numbers[] =
{
	0x1C, 0x22, 0x26, 0x2A, 0x32, 0x22, 0x1C, 0x00, 0x00,
	0x08, 0x18, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, 0x00,
	0x1C, 0x22, 0x22, 0x0C, 0x10, 0x20, 0x3E, 0x00, 0x00,
	0x1C, 0x22, 0x02, 0x0C, 0x02, 0x22, 0x1C, 0x00, 0x00,
	0x04, 0x0C, 0x14, 0x24, 0x3E, 0x04, 0x04, 0x00, 0x00,
	0x3E, 0x30, 0x3C, 0x02, 0x02, 0x22, 0x1C, 0x00, 0x00,
	0x0C, 0x10, 0x20, 0x3C, 0x22, 0x22, 0x1C, 0x00, 0x00,
	0x3E, 0x02, 0x04, 0x08, 0x10, 0x10, 0x10, 0x00, 0x00,
	0x1C, 0x22, 0x22, 0x1C, 0x22, 0x22, 0x1C, 0x00, 0x00,
	0x1C, 0x22, 0x22, 0x1E, 0x02, 0x04, 0x08, 0x00, 0x00
};

static const unsigned char shape_space[] =
{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 //space
};
#endif

void character_set(unsigned char number);

#endif // _COMX_CHAR_H
