export spiReceiveN
segment text
function spiReceiveN type=void function(pointer to unsigned char,unsigned int) sclass=auto scope=GLOBAL flags=0 ref=0.000000 ncalls=1
caller where type=pointer to unsigned char sclass=auto scope=PARAM flags=0 offset=0 ref=0.000000
caller n type=unsigned int sclass=auto scope=PARAM flags=0 offset=2 ref=0.000000
callee where type=pointer to unsigned char sclass=register scope=PARAM flags=0 offset=0 ref=10.000000
callee n type=unsigned int sclass=register scope=PARAM flags=0 offset=2 ref=20.000000
blockbeg off=0
blockbeg off=0
blockend off=0
blockend off=0
 2. ADDRFP2 where
4. ADDRFP2 where
3. INDIRP2 #4
1' ASGNP2 #2 #3 2 1
 2. ADDRFP2 n
4. ADDRFP2 n
3. INDIRU2 #4
1' ASGNU2 #2 #3 2 1
;void spiReceiveN(unsigned char * where, unsigned int n){
spireceiven.c:1.55:
 2. ADDRGP2 3
1' JUMPV #2
 2:
;	while(n>0){
spireceiven.c:2.11:
;		*where++=spiRec();
spireceiven.c:3.2:
 2. ADDRFP2 count=2 where
1' INDIRP2 count=2 #2
5. CNSTI2 1
4. ADDP2 #1 #5
3' ASGNP2 #2 #4 2 1
7. ADDRGP2 spiRec
6' CALLI2 #7 {int function}
10. CVIU2 #6 2
9. CVUU1 #10 2
8' ASGNU1 #1 #9 1 1
;		n--;
spireceiven.c:4.2:
 2. ADDRFP2 count=2 n
4. INDIRU2 #2
5. CNSTU2 1
3. SUBU2 #4 #5
1' ASGNU2 #2 #3 2 1
;	}
spireceiven.c:5.1:
 3:
;	while(n>0){
spireceiven.c:2.7:
 3. ADDRFP2 n
2. INDIRU2 #3
4. CNSTU2 0
1' NEU2 #2 #4 2
;}
spireceiven.c:6.0:
 1:
maxoff=0

import spiRec
progend
